library(car)
library(fitdistrplus)
library(stats)
library(actuar)

eos_clas <- read.csv(file="eosadj.csv", header = TRUE)

row_sub = apply(eos_clas, 1, function(row) all(row !=0 ))

eos <- eos_clas[row_sub,]

# Plots
plotdist(eos, histo = TRUE, demp = FALSE)
descdist(eos, boot = 1000)

# AIC for model
distributions = c("norm", "lnorm", "exp", "pois", "cauchy", "gamma", 
                    "logis", "nbinom", "geom", "weibull", "invgamma", 
                    "llogis", "invweibull", "pareto1", "pareto", "lgamma",
                    "trgamma", "invtrgamma")

distr_aic = list()
distr_fit = list()
for (distribution in distributions) {
  distr_fit[[distribution]] = fitdist(eos, distribution)
  distr_aic[[distribution]] = distr_fit[[distribution]]$aic
  }


# Comparing the best ones
fit_lnorm <- fitdist(eos, "lnorm")
fit_gamma <- fitdist(eos, "gamma")
fit_weibull <- fitdist(eos, "weibull")

par(mfrow = c(2, 2))
plot.legend <- c("Weibull", "lognormal", "gamma")
denscomp(list(fit_weibull, fit_lnorm, fit_gamma), legendtext = plot.legend)
qqcomp(list(fit_weibull, fit_lnorm, fit_gamma), legendtext = plot.legend)
cdfcomp(list(fit_weibull, fit_lnorm, fit_gamma), legendtext = plot.legend)
ppcomp(list(fit_weibull, fit_lnorm, fit_gamma), legendtext = plot.legend)

# Parameter estimation error
eos_ln <- bootdist(fit_lnorm, niter = 1001)
plot(eos_ln)

# Get mean and sd
mu <- fit_lnorm[["estimate"]][["meanlog"]]
sd <- fit_lnorm[["estimate"]][["sdlog"]]

true_mean <- exp(mu + (sd^2)/2)
print(true_mean)

true_var <- (exp(sd^2)-1)*(exp((2*mu)+(sd^2)))
print(true_var)
          
print(sqrt(exp(sd^2)-1))
