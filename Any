library(dplyr)

eos <- read.csv(file = "eos_bs.csv", header = TRUE)

### first, count how many observations are >= 150, excluding the first value ###
low_temp <- eos[-c(1), ] 

df_one <- low_temp%>%
  gather(PID, value, x_1:x_134)%>%
  group_by(PID)%>%
  tally(value > 149, name = "low") 

### Same deal, but for >= 300 ###
high_temp <- eos[-c(1), ]

df_two <- high_temp%>%
  gather(PID, value, x_1:x:134)%>%
  group_by(PID)%>%
  tally(value > 299, name = "high")

### again, but this time count all measurements except the first one ####
zero_temp <- eos[-c(1), ]

df <- zero_temp %>%
  gather(PID, value, x_1:x_134)%>%
  group_by(PID)%>%
  tally(value >= 0, name = total)

### now remove all but the first eosinophil readings ###
first <- eos[-c(2:nrow(eos)), ] 

### Convert from wide to long ###
long <- first %>%
  pivot_longer(
    cols = `x_1`:`x_134`,
    names_to = "PID",
    values_to = "eos"
  )

### arrange so we can join data frames easily ###
### to do: make this join by 'PID' rather than arrange and blindly join ###
long <- long %>% arrange(PID)

### Calculate the frequency of >= 150 for each individual ###
freq_low <- cbind(df_one$low / df$total, long$eos) %>% as.data.frame()
freq_high <- cbind(df_two$high / df$total, long $eos) %>% as.data.frame()


### trusty labels ###
labels_two <- c("0-50", "51-100", "101-150", "151-200", "201-250", 
                "251-300", "301-350", "351-400", "401+")


### Now group the eos into categories ###
cat_low <- freq_low %>% mutate(new_bin = cut(V2, breaks=c(-1, 50, 100, 
                                                        150, 200,
                                                        250, 300,
                                                        350, 400, Inf),
                                          labels = labels_two))

cat_high <- freq_high %>% mutate(new_bin = cut(V2, breaks=c(-1, 50, 100, 
                                                        150, 200,
                                                        250, 300,
                                                        350, 400, Inf),
                                          labels = labels_two))


### calculate frequency for each group ###
final_set_low <- cat_low %>% 
  group_by(new_bin) %>% 
  summarize(mean(V1))
colnames(final_set) <- c("new_bin", "Any_low")

final_set_high <- cat_high %>% 
  group_by(new_bin) %>% 
  summarize(mean(V1))
colnames(final_set) <- c("new_bin", "Any_high")


p_one <- ggplot(data = final_set_low, mapping = aes(x=new_bin, y=Any_low)) +
  geom_point() +
  theme_classic() +
  ylab("Probability that any subsequent reading is High Th2") +
  xlab("Initial PBEC Count") +
  scale_x_discrete(guide = guide_axis(angle = 45)) +
  scale_y_continuous(limits = c(0,1))
  
p_two <- ggplot(data = final_set_high, mapping = aes(x=new_bin, y=Any_high)) +
  geom_point() +
  theme_classic() +
  ylab("Probability that any subsequent reading is High Th2") +
  xlab("Initial PBEC Count") +
  scale_x_discrete(guide = guide_axis(angle = 45)) +
  scale_y_continuous(limits = c(0,1))
